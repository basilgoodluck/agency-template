name: Deploy code

on: 
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  lint-build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build

  create-and-merge-pr:
    needs: lint-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create PR to main branch if none exists
        id: create_pr
        run: |
          pr_number=$(gh pr list --head dev --base main --state open --json number -q '.[0].number')
          if [ -z "$pr_number" ]; then
              echo "No existing PR found. Creating one."
              gh pr create --title "Auto PR: dev to main" --body "Automated PR" --head dev --base main
              pr_number=$(gh pr list --head dev --base main --state open --json number -q '.[0].number')
              echo "PR #$pr_number created."
          else
              echo "PR already exists: #$pr_number"
          fi
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check PR status before enabling auto-merge
        run: |
          pr_number=${{ steps.create_pr.outputs.pr_number }}
          pr_status=$(gh pr view $pr_number --json statusCheckRollup -q '.statusCheckRollup')
          if [[ "$pr_status" == "SUCCESS" ]]; then
              echo "PR is in a valid state for auto-merge."
          else
              echo "PR is in unstable state ($pr_status). Skipping auto-merge."
              exit 0
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.create_pr.outputs.pr_number }}
          merge-method: squash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}